[tool.poetry]
name = "pyheat1d"
version = "0.1.0"
description = ""
authors = ["Henrique C. C. de Andrade <henrique.ccda@gmail.com>"]
readme = "README.md"
packages = [{include = "pyheat1d", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
numpy = "^1.26.1"
typer = "^0.9.0"
rich = "^13.6.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
taskipy = "^1.12.0"
black = "^23.10.1"
ruff = "^0.1.3"
mypy = "^1.6.1"
pre-commit = "^3.5.0"
coverage = "^7.3.2"
ipython = "^8.17.2"
ipdb = "^0.13.13"
types-setuptools = "^68.2.0.0"


[tool.poetry.group.doc.dependencies]
mkdocs-macros-plugin = "^1.0.5"
mkdocs = "^1.5.3"
mkdocstrings = "^0.23.0"
mkdocstrings-python = "^1.7.3"
mkdocs-material = "^9.4.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
exclude = ".git, .venv"

[tool.ruff]
line-length = 120

select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]

exclude = [
    ".venv"
]

[tool.pytest.ini_options]
addopts = "-ra -vv"
testpaths = [
    "tests",
    "--strict-markers",
]
markers=[
    "unitary: marks unitary tests",
    "integration: marks integration testes",
]


[tool.mypy]
warn_return_any = true
warn_unused_configs = true
pretty = true

[tool.taskipy.variables]
src_module = "src/pyheat1d"

[tool.taskipy.tasks]
fmt_black = {cmd="poetry run black {src_module} tests", help="Chamando do black", use_vars = true}
fmt_ruff= {cmd="poetry run ruff {src_module} tests --fix", help="Chamando do ruff", use_vars = true}
fmt = {cmd="task fmt_ruff && task fmt_black", help="Formatador do código"}

lin_mypy = {cmd="mypy --package tests --package pyheat1d", help="Analisador estatico de tipos."}
lin_ruff = {cmd="poetry run ruff check {src_module} tests", help="Linter com o Ruff.", use_vars = true}
linter = {cmd="task lin_mypy && task lin_ruff", help="Linter"}
test = {cmd="poetry run pytest", help="Rodando os testes"}

doc = {cmd="poetry run mkdocs serve", help="Subindo o servidor de Documentação."}


[tool.poetry.scripts]
pyheat1d = "pyheat1d.cli:app"
